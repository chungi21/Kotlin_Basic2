package sec02

// 함수형 프로그래밍(FP: Functional Programing)과 객체 지향 프로그래밍(OOP: Object Oriented Programing)을
// 모두 다 지원하는 언어는 자바와 코틀린, C++ 등이 있다.
// 현대적 프로그래밍의 트렌드가 위의 두 가지 방법을 혼용해서 프로그래밍화 되고 있다.
// 위의 2가지를 지원하는 언어들을 다중 패러다임 언어라고 한다.
// 함수형 프로그래밍은 순수함수(Pure Function)를 작성하도록 노력을 해야한다
// 순수 함수란 부작용이 없는 함수이다. 즉, 값이 예측이 가능한 함수를 의미한다.

// * 람다식(익명함수)
// - 이름이 없는 함수
// - 현대 프로그래밍 언어에서는 람다식이 다 도입이 되었다. 

// * 일급 객체
// - 함수를 가지고 함수의 인자값이나 리턴값, 변수에 할당할 수 있는 그런 객체를 일급 객체라 한다.

// * 고차 함수
// - 다른 함수를 인자로 사용하거나 함수를 결과값으로 반환하는 함수를 말한다.

// 일반 함수를 가지고 고차 함수를 구현
fun main() {
    var result1 : Int = sum(2,5)
    var result2 : Int = mul(sum(10,5),5) // 고차 함수, mul()에 매개변수로 sum() 함수를 이용했기 때문에 고차함수에 요건이 된다.

    println("result1 : ${result1}, result2 : ${result2}") // result1 : 7, result2 : 75


}

// 이름이 존재하는 일반 함수
fun sum(x:Int, y:Int) : Int = x+y
fun mul(x:Int, y:Int) : Int = x*y

